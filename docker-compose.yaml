#app depend on postgres (depends_on: - mypostgres) for run first - build for all appl
#version docker compose file
version: "3.7"

#have 2 services - postgres , ticketing-app

#need define service = app (give serv name, app name, ) create image for postgres(official image)
#define ports - (- = list, can define more than 1 port) can be more than 1 port
#restart - run always, if som-q happened - run again, and again
#volume - store persistence data inside volume - give name under network - use for postgres image
services:
  mypostgres:
    image: postgres
    container_name: mypostgres
    environment:
        POSTGRES_USER: "postgres"
        POSTGRES_PASSWORD: "SQ22!SmotNew"
        POSTGRES_DB: "ticketing-app"
    ports:
      - "5432:5432"
    restart: always
    volumes:
#inside we have this folder - copy/past volume(data) to initdb(under docker file- postgres- later - inside) for not lost data - store persistence data
      - initdb:/var/lib/postgresql/data
    networks:
      - webnet

#second service - ticketing-app

#use my own image - build from docker composite file - create and push(under same folder (.) root folder
#need create image from Dockerfile - go and build -> put image inside container - give name(ticketingapp)
#defaine port - they will know its my app
#network - give name
#  depends_on: - mypostgres -> need run first
  ticketing-app:
    build: .
    container_name: ticketingapp
    ports:
      - "8080:8080"
    networks:
      - webnet
    depends_on:
      - mypostgres
networks:
  webnet:
    driver: bridge
volumes:
  initdb: